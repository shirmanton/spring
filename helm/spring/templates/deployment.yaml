apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring.fullname" . }}
  labels:
    app: {{ include "spring.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "spring.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "spring.fullname" . }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.app.server.port }}
          env:
            - name: SERVER_PORT
              value: "{{ .Values.app.server.port }}"
            - name: KAFKA_HOST
              value: "{{ .Values.app.kafka.brokerHost }}"
            - name: KAFKA_PORT
              value: "{{ .Values.app.kafka.brokerPort }}"
            - name: KAFKA_TOPIC_NAME
              value: "{{ .Values.app.kafka.topic.name}}"
            - name: KAFKA_TOPIC_PARTITIONS
              value: "{{ .Values.app.kafka.topic.partitions }}"
            - name: KAFKA_TOPIC_REPLICAS
              value: "{{ .Values.app.kafka.topic.replicas }}"
            - name: KAFKA_TOPIC_CUSTOMER_KEY
              value: "{{ .Values.app.kafka.topic.customerKey }}"
            - name: SCHEMA_REGISTRY_HOST
              value: "{{ .Values.app.kafka.schemaHost }}"
            - name: SCHEMA_REGISTRY_PORT
              value: "{{ .Values.app.kafka.schemaPort }}"
            - name: KAFKA_AUTO_REGISTER_SCHEMAS
              value: "{{ .Values.app.kafka.autoRegisterSchemas }}"